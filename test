GET / HTTP/1.1
Host: localhost:8002
User-Agent: curl/7.64.1
Accept: */*

=================================================================
==5492==ERROR: AddressSanitizer: container-overflow on address 0x608000004569 at pc 0x000103b32bb9 bp 0x7ffeec2e2580 sp 0x7ffeec2e1d40
WRITE of size 11 at 0x608000004569 thread T0
    #0 0x103b32bb8 in wrap_memmove+0x2a8 (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x1dbb8)
    #1 0x7fff68518ba7 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)+0x8b (libc++.1.dylib:x86_64+0x37ba7)
    #2 0x103954f03 in void std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::construct<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) memory:1904
    #3 0x103954ed4 in void std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::integral_constant<bool, true>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) memory:1785
    #4 0x103954d41 in void std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::construct<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) memory:1613
    #5 0x10395473e in void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__construct_one_at_end<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) vector:924
    #6 0x10393df4e in std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::push_back(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) vector:1637
    #7 0x10393aa69 in Requese::Requese(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, s_server&) requese.cpp:26
    #8 0x10394437c in Requese::Requese(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, s_server&) requese.cpp:4
    #9 0x103936be5 in Get_response(s_server&) mainResponse.cpp:22
    #10 0x10397cecb in sendResponse(unsigned int, std::__1::map<unsigned int, s_server, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, s_server> > >&) servers2.cpp:55
    #11 0x103992551 in main servers2.cpp:807
    #12 0x7fff6b218cc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)

0x608000004569 is located 73 bytes inside of 96-byte region [0x608000004520,0x608000004580)
allocated by thread T0 here:
    #0 0x103b6a7ed in wrap__Znwm+0x7d (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x557ed)
    #1 0x103952308 in std::__1::__libcpp_allocate(unsigned long, unsigned long) new:253
    #2 0x103955ef4 in std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::allocate(unsigned long, void const*) memory:1869
    #3 0x103955d50 in std::__1::allocator_traits<std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::allocate(std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >&, unsigned long) memory:1586
    #4 0x103955a87 in std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >&) __split_buffer:318
    #5 0x1039552fc in std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >&) __split_buffer:317
    #6 0x103954a23 in void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__push_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) vector:1623
    #7 0x10393df60 in std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::push_back(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) vector:1640
    #8 0x10393aa69 in Requese::Requese(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, s_server&) requese.cpp:26
    #9 0x10394437c in Requese::Requese(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, s_server&) requese.cpp:4
    #10 0x103936be5 in Get_response(s_server&) mainResponse.cpp:22
    #11 0x10397cecb in sendResponse(unsigned int, std::__1::map<unsigned int, s_server, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, s_server> > >&) servers2.cpp:55
    #12 0x103992551 in main servers2.cpp:807
    #13 0x7fff6b218cc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)

HINT: if you don't care about these errors you may set ASAN_OPTIONS=detect_container_overflow=0.
If you suspect a false positive see also: https://github.com/google/sanitizers/wiki/AddressSanitizerContainerOverflow.
SUMMARY: AddressSanitizer: container-overflow (libclang_rt.asan_osx_dynamic.dylib:x86_64h+0x1dbb8) in wrap_memmove+0x2a8
Shadow bytes around the buggy address:
  0x1c1000000850: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd
  0x1c1000000860: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd
  0x1c1000000870: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd
  0x1c1000000880: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd
  0x1c1000000890: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd
=>0x1c10000008a0: fa fa fa fa 00 00 00 00 00 00 00 00 00[fc]fc fc
  0x1c10000008b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c10000008c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c10000008d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c10000008e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x1c10000008f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==5492==ABORTING
